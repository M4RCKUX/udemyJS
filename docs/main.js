(()=>{"use strict";class e{constructor(e,t,s,a){this.txt=e,this.hecho=t||!1,this.id=s||(new Date).getTime(),this.fechaInicio=a||new Date}}class t{constructor(){this.lista={}}add(e){this.lista[e.id]=e}eliminar(e){delete this.lista[e]}get(e){return this.lista[e]}toggle(e){this.lista[e].hecho=!this.lista[e].hecho}eliminarCompletados(){for(const e in this.lista)this.lista[e].hecho&&delete this.lista[e]}}class s{constructor(){}loadListaTareas(){const s=new t,a=JSON.parse(localStorage.getItem("listaTareas"));if(console.log(a),a)for(const t in a)s.add(new e(a[t].txt,a[t].hecho,a[t].id,a[t].fechaInicio));return s}saveListaTareas(e){localStorage.setItem("listaTareas",JSON.stringify(e.lista))}}class a{constructor(e){this.app=e,this.newTodo=document.querySelector(".new-todo"),this.todoList=document.querySelector(".todo-list"),this.todoCount=document.querySelector(".todo-count").firstChild,this.filters=document.querySelector(".filters"),this.clearCompleted=document.querySelector(".clear-completed"),this.setControls()}addTarea(e){const t=document.createElement("li");t.id=`id${e.id}`,e.hecho&&t.classList.add("completed"),t.innerHTML=`\n            <div class="view">\n                <input class="toggle" type="checkbox" ${e.hecho?"checked":""} >\n                <label>${e.txt}</label>\n                <button class="destroy"></button>\n            </div>`,t.querySelector(".destroy").addEventListener("click",(t=>this.app.deleteTarea(e.id))),t.querySelector(".toggle").addEventListener("click",(t=>this.app.toggleTarea(e.id))),this.todoList.append(t),this.updatePendientes()}deleteTarea(e){document.querySelector(`#id${e}`).remove(),this.updatePendientes()}toogleTarea(e){const t=document.querySelector(`#id${e}`);t.classList.contains("completed")?t.classList.remove("completed"):t.classList.add("completed"),this.updatePendientes()}refresh(e){this.todoList.innerHTML="";for(const t in e.lista)this.addTarea(e.lista[t]);this.updatePendientes()}updatePendientes(){const e=this.todoList.querySelectorAll("li");let t=0;e.forEach((e=>t+=e.classList.contains("completed")?0:1)),this.todoCount.innerText=t}filtrar(e){this.todoList.querySelectorAll("li").forEach((t=>{switch(t.classList.remove("hidden"),e){case"Completados":t.classList.contains("completed")||t.classList.add("hidden");break;case"Pendientes":t.classList.contains("completed")&&t.classList.add("hidden")}}))}setControls(){this.newTodo.addEventListener("change",(e=>{const t=e.target.value;""!=t&&(this.app.addTarea(t),e.target.value="")})),this.clearCompleted.addEventListener("click",(e=>this.app.clearCompleted())),this.filters.addEventListener("click",(e=>{this.filters.querySelectorAll(".filtro").forEach((e=>e.classList.remove("selected"))),e.target.classList.add("selected"),this.filtrar(e.target.innerText)}))}}new class{constructor(){this.model=new s,this.listaTareas=this.model.loadListaTareas(),this.view=new a(this),this.view.refresh(this.listaTareas)}addTarea(t){const s=new e(t);this.listaTareas.add(s),this.view.addTarea(s),this.model.saveListaTareas(this.listaTareas)}toggleTarea(e){this.listaTareas.toggle(e),this.view.toogleTarea(e),this.model.saveListaTareas(this.listaTareas)}deleteTarea(e){this.listaTareas.eliminar(e),this.view.deleteTarea(e),this.model.saveListaTareas(this.listaTareas)}clearCompleted(){this.listaTareas.eliminarCompletados(),this.view.refresh(this.listaTareas),this.model.saveListaTareas(this.listaTareas)}}})();